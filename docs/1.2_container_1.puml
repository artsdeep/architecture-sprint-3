@startuml
title Диаграмма уровня контейнеров Системы Умный дом

top to bottom direction

!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

Person(user, "Пользователь", "Пользователь системы")

Container(webComponent, "Wep APP Component", $techn="React JS", $tags="v1", $descr="Веб версия пользовательского интерфейса")
Container(mobileComponent, "Mobile Component", $techn="React Nativ", $tags="v1", $descr="Мобильная версия пользовательского интерфейса")


Container(deviceGatewayThing, "Шлюз Устройств", $techn="Spring.Boot", $descr="Реализует взаимодействие с устройстами")

Container(userContainer, "Пользовательский сервис", $techn="Spring.Boot", $descr="Функционал работы с пользователями")

Container(managerThingContainer, "Управление устройствами", $techn="Spring.Boot", $descr="Функционал управления устройствами")

Container(brokerMassage, "Брокер сообщений", $techn="Kafka", $descr="Шина для интеграции микросервисов")

Container(scriptThingContainer, "Сценарии для устройств", $techn="Spring.Boot", $descr="Работа со сценариями")

Container(telemetryContainer, "Телемметрия", $techn="Spring.Boot", $descr="Сбор и представление телеметрии")

Container(APIGateway, "API Gateway", "Kong", $descr="Предоставляет API")
Container(Light, "Устройство освещения", "Предоставляет API устройста освещения")
Container(Heating, "Устройство обогрева", "Предоставляет API устройста обогрева")
Container(Viewing, "Устройство наблюдения", "Предоставляет API устройста наблюдения")




ContainerDb(dbUser, "Database User", "PostgreSQL", "База для сервиса User", $sprite="postgresql_server")
ContainerDb(dbThing, "Database Thing", "PostgreSQL", "База для сервиса Устройств", $sprite="postgresql_server")
ContainerDb(dbScript, "Database Script", "PostgreSQL", "База для сервиса Сценариев", $sprite="postgresql_server")
ContainerDb(dbTelemetry, "Database Telemetry", "PostgreSQL", "База для сервиса Телеметрии", $sprite="postgresql_server")
ContainerDb(dbTempTelemetry, "Database Temp Telemetry", "ClickHouse", "База для временного хранения дынных", $sprite="clickhouse_server")


Rel(deviceGatewayThing, Light, "Запрос данных и вызов API")
Rel(deviceGatewayThing, Heating, "Запрос данных и вызов API")
Rel(deviceGatewayThing, Viewing, "Запрос данных и вызов API")

Rel(deviceGatewayThing, brokerMassage, "Публикует данные полученные от устройств")
Rel(dbTempTelemetry, brokerMassage, "Публикует данные полученные от устройств")
Rel(brokerMassage, deviceGatewayThing, "Отправляет сообщшения устройствам")


Rel(brokerMassage, managerThingContainer, "Получение событий")




Rel(APIGateway, managerThingContainer, "Обращается к API")
Rel(APIGateway, scriptThingContainer, "Обращается к API")
Rel(APIGateway, telemetryContainer, "Обращается к API")





Rel(managerThingContainer, dbThing, "Запросы к БД")
Rel(scriptThingContainer, dbScript, "Запросы к БД")
Rel(telemetryContainer, dbTelemetry, "Запросы к БД")
Rel(telemetryContainer, dbTempTelemetry, "Запросы к БД со временными данными")

Rel(APIGateway, userContainer, "Обращается к API")



Rel(userContainer, dbUser, "Запросы к БД")

Rel(managerThingContainer, brokerMassage, "Подписка на события")
Rel(scriptThingContainer, brokerMassage, "Подписка на события")

Rel(telemetryContainer, brokerMassage, "Подписка на события")

Rel(user, webComponent, "Использует функционал умного дома")
Rel(user, mobileComponent, "Использует функционал умного дома")

Rel(webComponent, APIGateway, "Обращается к API")
Rel(mobileComponent, APIGateway, "Обращается к API")
@enduml


